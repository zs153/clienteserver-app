<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Formulario</title>
  <link rel="icon" href="/img/favicon.ico" type="image/x-icon" />
  <!-- bootstrap -->
  <link rel="stylesheet" href="/css/bootstrap-icons.css">
  <!-- custom -->
  <link rel="stylesheet" href="/css/estilos.min.css">
  <link rel="stylesheet" href="/css/navbar.css">
</head>

<body class="antialiased">
  <div class="wrapper">
    <%- include('../../partials/header') %>
    <%- include('../../partials/navbar', {opcion: 'FORMULARIOS'}) %>
    <div class="page-wrapper">
      <div class="page-body">
        <div class="container-xl">
          <div class="row row-deck row-cards">
            <div class="col-12">
              <div class="card">
                <% if(typeof alerts !='undefined') { %>
                  <% alerts.map(function (alert){ %>
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                      <%- alert.msg %>
                    </div>
                  <% }) %>
                <% } %>
                <form action="/admin/formularios/update" method="POST" onsubmit="return validate();">
                  <input type="hidden" id="iddocu" name="iddocu" value="<%- datos.formulario.IDDOCU %>">
                  <div class="card-header">
                    <h3 class="card-title">Formulario</h3>
                  </div>
                  <div class="card-body">
                    <div class="row">
                      <div class="col-2">
                        <div class="mb-1">
                          <div class="input-control">
                            <label class="form-label required">NIF/NIE</label>
                            <input type="text" name="nifcon" id="nifcon" class="form-control" style="text-transform: uppercase;" value="<%- datos.formulario.NIFCON %>" autofocus/>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                      <div class="col-6">
                        <div class="mb-1">
                          <div class="input-control required">
                            <label class="form-label required">Nombre</label>
                            <input type="text" name="nomcon" id="nomcon" class="form-control" style="text-transform: uppercase;" value="<%- datos.formulario.NOMCON %>" />
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                      <div class="col-4">
                        <div class="mb-1">
                          <label class="form-label">Correo electrónico</label>
                          <input type="text" name="emacon" id="emacon" class="form-control" value="<%- datos.formulario.EMACON %>" />
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-9">
                        <div class="mb-1">
                          <div class="form-label">Tipo</div>
                          <div class="input-control">
                            <select class="form-select form-control" id="cbotip" name="tipdoc" value="<%- datos.formulario.TIPDOC %>">
                              <option value="0">SELECCIONE UN TIPO</option>
                            </select>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                      <div class="col-2">
                        <div class="mb-1">
                          <div class="input-control">
                            <label class="form-label required">Ejercicio</label>
                            <input type="number" name="ejedoc" id="ejedoc" class="form-control" value="<%- datos.formulario.EJEDOC %>" />
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                      <div class="col-1">
                        <div class="mb-1">
                          <label class="form-label">Adm</label>
                          <input type="text" name="fundoc" id="fundoc" class="form-control" value="<%- datos.formulario.FUNDOC %>" readonly />
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-3">
                        <div class="mb-1">
                          <div class="input-control">
                            <label class="form-label required">Fecha</label>
                            <input type="date" name="fecdoc" id="fecdoc" class="form-control" value="<%- datos.formulario.FECDOC %>" />
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                      <div class="col-5">
                        <div class="mb-1">
                          <div class="form-label">Oficina</div>
                          <select class="form-select" id="cboofi" name="ofidoc" value="<%- datos.formulario.OFIDOC %>">
                          </select>
                        </div>
                      </div>
                      <div class="col-2">
                        <div class="mb-1">
                          <label class="form-label">Teléfono</label>
                          <input type="text" name="telcon" id="telcon" class="form-control" value="<%- datos.formulario.TELCON %>" />
                        </div>
                      </div>
                      <div class="col-2">
                        <div class="mb-1">
                          <div class="input-control">
                            <label class="form-label required">Movil</label>
                            <input type="text" name="movcon" id="movcon" class="form-control" value="<%- datos.formulario.MOVCON %>" />
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-12">
                        <small></small>
                        <div class="mb-1">
                          <label class="form-label">Observaciones</label>
                            <textarea type="text" name="obsdoc" id="obsdoc" class="form-control" rows="10" style="resize: vertical"><%- datos.formulario.OBSDOC %></textarea>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="card-footer text-end">
                    <div class="d-flex">
                      <a href="/admin/formularios" class="btn btn-link">Cancelar</a>
                      <button type="submit" class="btn btn-primary ms-auto" id="btnUpdate">Actualizar formulario</button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%- include('../../partials/footer') %>
  </div>

  <script src="/js/ayuda.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const messages = document.getElementById('messages')
    const socket = io()

    socket.on('receive-message', msg => {
      const li = document.createElement('li')
      li.textContent = msg
      messages.appendChild(li)

      const toggleBadge = document.querySelector('#toggleBadge');
      const numeroMensajes = messages.getElementsByTagName("li").length
      if (numeroMensajes === 1) {
        toggleBadge.classList.toggle('d-none')
      }
    })
  </script> 
  <script>
    const nifcon = document.getElementById('nifcon')
    const nomcon = document.getElementById('nomcon')
    const movcon = document.getElementById('movcon')
    const ejedoc = document.getElementById('ejedoc')
    const fecdoc = document.getElementById('fecdoc')
    const obsdoc = document.getElementById('obsdoc')
    const pwdusu = document.getElementById('pwdusu')
    const modsms = document.getElementById('modsms')
    const nomusu = document.getElementById('nomusu')
    const emausu = document.getElementById('emausu')
    const telusu = document.getElementById('telusu')

    const validate = () => {
      const nifconValue = nifcon.value.trim().slice(0,9)
      const nomconValue = nomcon.value.trim()
      const movconValue = movcon.value.trim()
      const tipdocValue = combo.value
      const ejedocValue = ejedoc.value.trim()
      const fecdocValue = fecdoc.value.trim()
      const obsdocValue = obsdoc.value.trim()

      if (nifconValue === '') {
        setError(nifcon, 'NIF/NIE requerido')
        setTimeout(function () {
          setSuccess(nifcon)
        }, 3000)
        return false
      } else {
        const pattern = /^([X-Y][0-9]{7}[A-Z]{1})|([0-9]{8}[A-Z]{1})$/

        if (!pattern.test(nifconValue)){
          setError(nifcon, 'Introduzca NIF/NIE válido')
          setTimeout(function () {
            setSuccess(nifcon)
          }, 3000)          
          return false
        }

        const strBase = "TRWAGMYFPDXBNJZSQVHLCKET";
        const primeraPosicion = nifconValue.slice(0, 1);
        const letraNif = nifconValue.slice(8);
        let nuevoNif = nifconValue;

        if (isNaN(primeraPosicion)) {
          nuevoNif = nifconValue.slice(1);
          if (primeraPosicion === 'X') {
            nuevoNif = '0' + nuevoNif;
          } else if (primeraPosicion === "Y") {
            nuevoNif = "1" + nuevoNif;
          } else if (primeraPosicion === "Z") {
            nuevoNif = "2" + nuevoNif;
          }
        }

        const dniNumero = nuevoNif.slice(0, 8);
        const pos = parseInt(dniNumero) % 23;
        const letra = strBase.slice(pos, pos + 1);
        const isValid = letraNif === letra

        if(isValid === false) {
          setError(nifcon, 'Introduzca NIF/NIE válido')
          setTimeout(function () {
            setSuccess(nifcon)
          }, 3000)
          return false
        }
        setSuccess(nifcon)
      }
      if (nomconValue === '') {
        setError(nomcon, 'Nombre requerido')
        setTimeout(function () {
          setSuccess(nomcon)
        }, 3000)
        return false
      } if (nomconValue.length > 255) {
        setError(nomcon, 'Se excede la longitud del nombre')
        setTimeout(function () {
          setSuccess(nomcon)
        }, 3000)        
        return false
      } else {
        setSuccess(nomcon)
      }
      if (tipdocValue === '0') {
        setError(combo, 'Seleccione un tipo')
        setTimeout(function () {
          setSuccess(combo)
        }, 3000)
        return false
      } else {
        setSuccess(combo)
      }
      if (ejedocValue === '') {
        setError(ejedoc, 'Ejercicio requerido')
        setTimeout(function () {
          setSuccess(ejedoc)
        }, 3000)
        return false
      } else {
        const pattern = /^([0-9]{4})$/
        const isValid = pattern.test(ejedocValue)

        if(isValid === false) {
          setError(ejedoc, 'Introduzca ejercicio válido')
          setTimeout(function () {
            setSuccess(ejedoc)
          }, 3000)
          return false
        }
        setSuccess(ejedoc)        
      }
      if (isNaN(Date.parse(fecdocValue))) {
        setError(fecdoc, 'Fecha requerida')
        setTimeout(function () {
          setSuccess(fecdoc)
        }, 3000)
        return false
      } else {
        setSuccess(fecdoc)        
      }      
      if (movconValue === '') {
        setError(movcon, 'Movil requerido')
        setTimeout(function () {
          setSuccess(movcon)
        }, 3000)
        return false
      } else {
        const pattern = /^([6]{1})([0-9]{8})|(7[1-4]{1})([0-9]{7})$/
        const isValid = pattern.test(movconValue)

        if(isValid === false) {
          setError(movcon, 'Introduzca movil válido')
          setTimeout(function () {
            setSuccess(movcon)
          }, 3000)
          return false
        }
        setSuccess(movcon)
      }
      if (obsdocValue.length > 4000) {
        setError(obsdoc, 'Se excede la longitud de las observaciones')
        setTimeout(function () {
          setSuccess(obsdoc)
        }, 3000)
        return false
      } else {
        setSuccess(nomcon)
      }

      return true
    }

    const setSuccess = (element) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = '';
      inputControl.classList.add('is-valid');
      element.classList.remove('is-invalid');
    }
    const setError = (element, message) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = message;
      element.classList.add('is-invalid');
      inputControl.classList.remove('is-valid');
    }
  </script>
  <script>
    const Tipos = () => {
      const xhr = new XMLHttpRequest();

      xhr.onload = function() {
        if (xhr.status === 200) {
          const tipos = JSON.parse(xhr.response)
          const cbo = document.getElementById('cbotip')

          tipos.map((itm) => {
            const option = document.createElement('option')
            option.value = itm.IDTIPO
            option.text = itm.DESTIP
            if (itm.IDTIPO === <%- datos.formulario.TIPDOC %>) {
              option.selected = true
            }
            cbo.appendChild(option)
          })
        }
      };
      xhr.open('POST', 'http://localhost:8000/api/tipos/formularios', true);
      xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
      xhr.send()
    }
    Tipos();
  </script>
  <script>
    const Oficinas = () => {
      const xhr = new XMLHttpRequest();

      xhr.onload = function() {
        if (xhr.status === 200) {
          const oficinas = JSON.parse(xhr.response)
          const cbo = document.getElementById('cboofi')

          oficinas.map((itm) => {
            const option = document.createElement('option')
            option.value = itm.IDOFIC
            option.text = itm.DESOFI
            if (itm.IDOFIC === <%- datos.formulario.OFIDOC %>) {
              option.selected = true
            }
            cbo.appendChild(option)
          })
        }
      };
      xhr.open('POST', 'http://localhost:8000/api/oficinas', true);
      xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
      xhr.send()
    }
    Oficinas();
  </script>  
</body>
</html>